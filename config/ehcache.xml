<?xml version="1.0" encoding="UTF-8"?>
<ehcache>
    <!-- C:\Jason_L_Liang\develop\EhcacheT：Java临时目录。指定一个文件目录，当EhCache把数据写到硬盘上或者系统jvm内存时，将把数据写到这个文件目录下 -->
    <diskStore path="C:\Jason_L_Liang\develop\EhcacheT"/>



	<!-- a.直接在service实现类相关方法上添加@Cacheable(value="自定义缓存name")
		 b.在相应mapper.xml文件中添加
         	第一种打印cache日志      <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
     		第二种不打印cache日志   <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
			然后再在相应的<select ></seelct>标签中添加useCache=true  或者false，默认是false。
		 c.在相应的mapper.java中添加@Option(useCache=true 或者false)默认false  
	 -->



    <!-- maxElementsInMemory：设置基于内存的缓存可存放对象的最大数目。  -->
    <!-- eternal：如果为true，表示对象永远不会过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false; -->
    <!-- timeToIdleSeconds： 设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，如果处于空闲状态的时间超过了
    	 timeToIdleSeconds属性值，这个对象就会过期。当对象过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。 -->
    <!-- 如果该属性值为0，则表示对象可以无限期地处于空闲状态。  -->
    <!-- timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 
    timeToLiveSeconds属性值，这个对象就会过期。当对象过期，EHCache将把它从缓存中清除。只有当eternal属性为false，该属性才有效。
    如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义。  -->
    <!-- overflowToDisk：如果为true,表示当基于内存的缓存中的对象数目达到了maxElementsInMemory界限后，会把益出的对象写到基于硬盘的缓存中。 -->

    <!-- 设定缓存的默认数据过期策略 -->
    <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            overflowToDisk="true"
            timeToIdleSeconds="10"
            timeToLiveSeconds="20"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"/>

	<!-- 系统缓存 -->
	<cache name="sysCaches" maxEntriesLocalHeap="100" eternal="true" overflowToDisk="true"/>
	
    <!-- 自定义缓存策略 -->
    <cache name="myCache"
           maxElementsInMemory="1000"
           eternal="false"
           overflowToDisk="true"
           timeToIdleSeconds="100"
           timeToLiveSeconds="200"/>
</ehcache>
